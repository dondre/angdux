"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Dictionary {
    constructor() {
        this._items = {};
        this._count = 0;
    }
    containsKey(key) {
        return this._items.hasOwnProperty(key);
    }
    count() {
        return this._count;
    }
    add(key, value) {
        if (!this._items.hasOwnProperty(key))
            this._count++;
        this._items[key] = value;
    }
    remove(key) {
        var val = this._items[key];
        delete this._items[key];
        this._count--;
        return val;
    }
    item(key) {
        return this._items[key];
    }
    items() {
        return this._items;
    }
    keys() {
        var keySet = [];
        for (var prop in this._items) {
            if (this._items.hasOwnProperty(prop)) {
                keySet.push(prop);
            }
        }
        return keySet;
    }
    values() {
        var values = [];
        for (var prop in this._items) {
            if (this._items.hasOwnProperty(prop)) {
                values.push(this._items[prop]);
            }
        }
        return values;
    }
}
exports.Dictionary = Dictionary;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVyZmFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFlQTtJQUFBO1FBQ1ksV0FBTSxHQUEyQixFQUFFLENBQUM7UUFFcEMsV0FBTSxHQUFXLENBQUMsQ0FBQztJQXVEL0IsQ0FBQztJQXJEVSxXQUFXLENBQUMsR0FBVztRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVNLEtBQUs7UUFDUixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRU0sR0FBRyxDQUFDLEdBQVcsRUFBRSxLQUFRO1FBQzVCLEVBQUUsQ0FBQSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRW5CLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFFTSxNQUFNLENBQUMsR0FBVztRQUNyQixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDZCxNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUVNLElBQUksQ0FBQyxHQUFXO1FBQ25CLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFTSxLQUFLO1FBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUVNLElBQUk7UUFDUCxJQUFJLE1BQU0sR0FBYSxFQUFFLENBQUM7UUFFMUIsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDM0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RCLENBQUM7UUFDTCxDQUFDO1FBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBRU0sTUFBTTtRQUNULElBQUksTUFBTSxHQUFRLEVBQUUsQ0FBQztRQUVyQixHQUFHLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUMzQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ25DLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ25DLENBQUM7UUFDTCxDQUFDO1FBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNsQixDQUFDO0NBQ0o7QUExREQsZ0NBMERDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBJRGljdGlvbmFyeTxUPiB7XG4gICAgYWRkKGtleTogc3RyaW5nLCB2YWx1ZTogVCk7XG4gICAgY29udGFpbnNLZXkoa2V5OiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGNvdW50KCk6IG51bWJlcjtcbiAgICBpdGVtKGtleTogc3RyaW5nKTogVDtcbiAgICBrZXlzKCk6IHN0cmluZ1tdO1xuICAgIHJlbW92ZShrZXk6IHN0cmluZyk6IFQ7XG4gICAgdmFsdWVzKCk6IFRbXTtcbn1cblxuXG5pbnRlcmZhY2UgSUFjdGlvbiB7XG4gICAgdHlwZTogc3RyaW5nXG59XG5cbmV4cG9ydCBjbGFzcyBEaWN0aW9uYXJ5PFQ+IGltcGxlbWVudHMgSURpY3Rpb25hcnk8VD4ge1xuICAgIHByaXZhdGUgX2l0ZW1zOiB7IFtpbmRleDogc3RyaW5nXTogVCB9ID0ge307XG4gXG4gICAgcHJpdmF0ZSBfY291bnQ6IG51bWJlciA9IDA7XG4gXG4gICAgcHVibGljIGNvbnRhaW5zS2V5KGtleTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pdGVtcy5oYXNPd25Qcm9wZXJ0eShrZXkpO1xuICAgIH1cbiBcbiAgICBwdWJsaWMgY291bnQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvdW50O1xuICAgIH1cbiBcbiAgICBwdWJsaWMgYWRkKGtleTogc3RyaW5nLCB2YWx1ZTogVCkge1xuICAgICAgICBpZighdGhpcy5faXRlbXMuaGFzT3duUHJvcGVydHkoa2V5KSlcbiAgICAgICAgICAgICB0aGlzLl9jb3VudCsrO1xuIFxuICAgICAgICB0aGlzLl9pdGVtc1trZXldID0gdmFsdWU7XG4gICAgfVxuIFxuICAgIHB1YmxpYyByZW1vdmUoa2V5OiBzdHJpbmcpOiBUIHtcbiAgICAgICAgdmFyIHZhbCA9IHRoaXMuX2l0ZW1zW2tleV07XG4gICAgICAgIGRlbGV0ZSB0aGlzLl9pdGVtc1trZXldO1xuICAgICAgICB0aGlzLl9jb3VudC0tO1xuICAgICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiBcbiAgICBwdWJsaWMgaXRlbShrZXk6IHN0cmluZyk6IFQge1xuICAgICAgICByZXR1cm4gdGhpcy5faXRlbXNba2V5XTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaXRlbXMoKTp7IFtpbmRleDogc3RyaW5nXTogVCB9IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2l0ZW1zO1xuICAgIH1cbiBcbiAgICBwdWJsaWMga2V5cygpOiBzdHJpbmdbXSB7XG4gICAgICAgIHZhciBrZXlTZXQ6IHN0cmluZ1tdID0gW107XG4gXG4gICAgICAgIGZvciAodmFyIHByb3AgaW4gdGhpcy5faXRlbXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9pdGVtcy5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuICAgICAgICAgICAgICAgIGtleVNldC5wdXNoKHByb3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gXG4gICAgICAgIHJldHVybiBrZXlTZXQ7XG4gICAgfVxuIFxuICAgIHB1YmxpYyB2YWx1ZXMoKTogVFtdIHtcbiAgICAgICAgdmFyIHZhbHVlczogVFtdID0gW107XG4gXG4gICAgICAgIGZvciAodmFyIHByb3AgaW4gdGhpcy5faXRlbXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9pdGVtcy5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKHRoaXMuX2l0ZW1zW3Byb3BdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuIFxuICAgICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH1cbn1cbiJdfQ==